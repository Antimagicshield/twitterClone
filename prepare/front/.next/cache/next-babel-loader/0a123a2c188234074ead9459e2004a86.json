{"ast":null,"code":"import { all, fork, put, takeLatest, delay, throttle, call } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nimport axios from 'axios';\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadPosts() {\n  try {\n    const result = yield call(loadPostsAPI);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLikePost), fork(watchUnlikePost), fork(watchRemovePost), fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","delay","throttle","call","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","axios","loadPostsAPI","get","loadPosts","result","type","data","err","console","error","response","addPostAPI","post","content","addPost","action","id","log","removePostAPI","removePost","shortId","generate","addCommentAPI","postId","addComment","watchLikePost","likePost","watchUnlikePost","unlikePost","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/sagas/post.js"],"sourcesContent":["import {\n  all,\n  fork,\n  put,\n  takeLatest,\n  delay,\n  throttle,\n  call,\n} from 'redux-saga/effects';\nimport {\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_SUCCESS,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nimport axios from 'axios';\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadPosts() {\n  try {\n    const result = yield call(loadPostsAPI);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', { content: data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchRemovePost),\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n  ]);\n}\n"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,IAPF,QAQO,oBARP;AASA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,kBAVF,EAWEC,kBAXF,EAYEC,kBAZF,QAaO,kBAbP;AAcA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,GAAwB;EACtB,OAAOD,KAAK,CAACE,GAAN,CAAU,QAAV,CAAP;AACD;;AAED,UAAUC,SAAV,GAAsB;EACpB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMnB,IAAI,CAACgB,YAAD,CAAzB;IACA,MAAMpB,GAAG,CAAC;MACRwB,IAAI,EAAER,kBADE;MAERS,IAAI,EAAEF,MAAM,CAACE;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAc,OAAd;IACA,MAAM5B,GAAG,CAAC;MACRwB,IAAI,EAAET,kBADE;MAERU,IAAI,EAAEC,GAAG,CAACG,QAAJ,CAAaJ;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASK,UAAT,CAAoBL,IAApB,EAA0B;EACxB,OAAON,KAAK,CAACY,IAAN,CAAW,OAAX,EAAoB;IAAEC,OAAO,EAAEP;EAAX,CAApB,CAAP;AACD;;AAED,UAAUQ,OAAV,CAAkBC,MAAlB,EAA0B;EACxB,IAAI;IACF,MAAMX,MAAM,GAAG,MAAMnB,IAAI,CAAC0B,UAAD,EAAaI,MAAM,CAACT,IAApB,CAAzB;IACA,MAAMzB,GAAG,CAAC;MACRwB,IAAI,EAAEjB,gBADE;MAERkB,IAAI,EAAEF,MAAM,CAACE;IAFL,CAAD,CAAT;IAIA,MAAMzB,GAAG,CAAC;MACRwB,IAAI,EAAEP,cADE;MAERQ,IAAI,EAAEF,MAAM,CAACE,IAAP,CAAYU;IAFV,CAAD,CAAT;EAID,CAVD,CAUE,OAAOT,GAAP,EAAY;IACZC,OAAO,CAACS,GAAR,CAAY,OAAZ;IACA,MAAMpC,GAAG,CAAC;MACRwB,IAAI,EAAEnB,gBADE;MAERoB,IAAI,EAAEC,GAAG,CAACG,QAAJ,CAAaJ;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASY,aAAT,CAAuBZ,IAAvB,EAA6B;EAC3B,OAAON,KAAK,CAACY,IAAN,CAAW,WAAX,EAAwBN,IAAxB,CAAP;AACD;;AAED,UAAUa,UAAV,CAAqBJ,MAArB,EAA6B;EAC3B,IAAI;IACF,MAAMhC,KAAK,CAAC,IAAD,CAAX;IACA,MAAMiC,EAAE,GAAGI,OAAO,CAACC,QAAR,EAAX;IACA,MAAMxC,GAAG,CAAC;MACRwB,IAAI,EAAEZ,mBADE;MAERa,IAAI,EAAES,MAAM,CAACT;IAFL,CAAD,CAAT;IAIA,MAAMzB,GAAG,CAAC;MACRwB,IAAI,EAAEN,iBADE;MAERO,IAAI,EAAES,MAAM,CAACT;IAFL,CAAD,CAAT;EAID,CAXD,CAWE,OAAOC,GAAP,EAAY;IACZ,MAAM1B,GAAG,CAAC;MACRwB,IAAI,EAAEX,mBADE;MAERY,IAAI,EAAEC,GAAG,CAACG,QAAJ,CAAaJ;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASgB,aAAT,CAAuBhB,IAAvB,EAA6B;EAC3B,OAAON,KAAK,CAACY,IAAN,CAAY,SAAQN,IAAI,CAACiB,MAAO,UAAhC,EAA2CjB,IAA3C,CAAP;AACD;;AAED,UAAUkB,UAAV,CAAqBT,MAArB,EAA6B;EAC3B,IAAI;IACF,MAAMX,MAAM,GAAG,MAAMnB,IAAI,CAACqC,aAAD,EAAgBP,MAAM,CAACT,IAAvB,CAAzB;IACA,MAAMzB,GAAG,CAAC;MACRwB,IAAI,EAAEf,mBADE;MAERgB,IAAI,EAAEF,MAAM,CAACE;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACA,MAAM1B,GAAG,CAAC;MACRwB,IAAI,EAAEd,mBADE;MAERe,IAAI,EAAEC,GAAG,CAACG,QAAJ,CAAaJ;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUmB,aAAV,GAA0B;EACxB,MAAM3C,UAAU,CAACa,kBAAD,EAAqB+B,QAArB,CAAhB;AACD;;AAED,UAAUC,eAAV,GAA4B;EAC1B,MAAM7C,UAAU,CAACa,kBAAD,EAAqBiC,UAArB,CAAhB;AACD;;AAED,UAAUC,cAAV,GAA2B;EACzB,MAAM7C,QAAQ,CAAC,IAAD,EAAOW,kBAAP,EAA2BQ,SAA3B,CAAd;AACD;;AAED,UAAU2B,YAAV,GAAyB;EACvB,MAAMhD,UAAU,CAACK,gBAAD,EAAmB2B,OAAnB,CAAhB;AACD;;AAED,UAAUiB,eAAV,GAA4B;EAC1B,MAAMjD,UAAU,CAACU,mBAAD,EAAsB2B,UAAtB,CAAhB;AACD;;AAED,UAAUa,eAAV,GAA4B;EAC1B,MAAMlD,UAAU,CAACO,mBAAD,EAAsBmC,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUS,QAAV,GAAqB;EAClC,MAAMtD,GAAG,CAAC,CACRC,IAAI,CAAC6C,aAAD,CADI,EAER7C,IAAI,CAAC+C,eAAD,CAFI,EAGR/C,IAAI,CAACmD,eAAD,CAHI,EAIRnD,IAAI,CAACiD,cAAD,CAJI,EAKRjD,IAAI,CAACkD,YAAD,CALI,EAMRlD,IAAI,CAACoD,eAAD,CANI,CAAD,CAAT;AAQD"},"metadata":{},"sourceType":"module"}