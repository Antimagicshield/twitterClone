{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n}; //action creator\n\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.name\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","login","data","type","changeNickname","rootReducer","state","action","name"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/reducers/index.js"],"sourcesContent":["const initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {},\n  },\n  post: {\n    mainPosts: [],\n  },\n};\n\nconst login = data => {\n  return {\n    type: 'LOG_IN',\n    data,\n  };\n};\n\n//action creator\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data,\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return {\n        ...state,\n        name: action.name,\n      };\n  }\n};\n\nexport default rootReducer;\n"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,UAAU,EAAE,KADR;IAEJD,IAAI,EAAE,IAFF;IAGJE,UAAU,EAAE,EAHR;IAIJC,SAAS,EAAE;EAJP,CADa;EAOnBC,IAAI,EAAE;IACJC,SAAS,EAAE;EADP;AAPa,CAArB;;AAYA,MAAMC,KAAK,GAAGC,IAAI,IAAI;EACpB,OAAO;IACLC,IAAI,EAAE,QADD;IAELD;EAFK,CAAP;AAID,CALD,C,CAOA;;;AACA,MAAME,cAAc,GAAGF,IAAI,IAAI;EAC7B,OAAO;IACLC,IAAI,EAAE,iBADD;IAELD;EAFK,CAAP;AAID,CALD;;AAOA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;EACpD,QAAQA,MAAM,CAACJ,IAAf;IACE,KAAK,QAAL;MACE,uCACKG,KADL;QAEEE,IAAI,EAAED,MAAM,CAACC;MAFf;EAFJ;AAOD,CARD;;AAUA,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}