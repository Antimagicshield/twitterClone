{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); //reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LIKE_POSTß_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LIKE_POSTß_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LIKE_POSTß_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case UNLIKE_POSTß_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case UNLIKE_POSTß_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case UNLIKE_POSTß_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(v => v.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","LIKE_POSTß_REQUEST","LIKE_POSTß_SUCCESS","concat","length","LIKE_POSTß_FAILURE","error","UNLIKE_POSTß_REQUEST","UNLIKE_POSTß_SUCCESS","UNLIKE_POSTß_FAILURE","unshift","filter","v","id","post","find","PostId","Comments"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n//reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LIKE_POSTß_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LIKE_POSTß_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LIKE_POSTß_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case UNLIKE_POSTß_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case UNLIKE_POSTß_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case UNLIKE_POSTß_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(v => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}