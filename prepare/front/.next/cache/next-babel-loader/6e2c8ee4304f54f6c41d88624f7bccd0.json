{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n}; //reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","filter","v","i","unshift","error","post","find","id","PostId","Likers","push","UserId","concat","length","Comments"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n};\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n//reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(\n          v => v.id !== action.data.PostId\n        );\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}