{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    }\n  };\n}; //reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v === action.data.postId;\n          });\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","post","find","postId"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const generateDummyPost = number =>\n  Array(number)\n    .fill()\n    .map(() => ({\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.paragraph(),\n      Images: [\n        {\n          src: faker.image.image(),\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            id: shortId.generate(),\n            nickname: faker.name.findName(),\n          },\n          content: faker.lorem.sentence(),\n        },\n      ],\n    }));\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n});\n\n//reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(v => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find(v => v === action.data.postId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}