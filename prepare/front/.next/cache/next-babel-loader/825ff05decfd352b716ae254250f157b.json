{"ast":null,"code":"var _jsxFileName = \"/Users/munseungjun/Documents/react-NodeBird/prepare/front/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nconst Home = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nHome.title = 'Home';\nexport default Home;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Home","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","post","dispatch","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","alert","map","title"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/pages/index.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nconst Home = () => {\n  const { me } = useSelector(state => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } =\n    useSelector(state => state.post);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map(post => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nHome.title = 'Home';\n\nexport default Home;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM;IAAEC;EAAF,IAASP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;EACA,MAAM;IAAEC,SAAF;IAAaC,YAAb;IAA2BC,gBAA3B;IAA6CC;EAA7C,IACJb,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACM,IAAhB,CADb;EAEA,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAAC;MACPC,IAAI,EAAEX;IADC,CAAD,CAAR;IAIAU,QAAQ,CAAC;MACPC,IAAI,EAAEZ;IADC,CAAD,CAAR;EAGD,CARQ,EAQN,EARM,CAAT;EAUAN,SAAS,CAAC,MAAM;IACd,SAASmB,QAAT,GAAoB;MAClB,IACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;QACA,IAAIZ,YAAY,IAAI,CAACC,gBAArB,EAAuC;UACrC,MAAMY,MAAM,GAAGd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;UACAX,QAAQ,CAAC;YACPC,IAAI,EAAEZ,kBADC;YAEPoB;UAFO,CAAD,CAAR;QAID;MACF;IACF;;IACDN,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;IACA,OAAO,MAAM;MACXC,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;IACD,CAFD;EAGD,CAnBQ,EAmBN,CAACN,YAAD,EAAeC,gBAAf,CAnBM,CAAT;EAqBAd,SAAS,CAAC,MAAM;IACd,IAAIe,YAAJ,EAAkB;MAChBgB,KAAK,CAAChB,YAAD,CAAL;IACD;EACF,CAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;EAMA,OACE,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGN,EAAE,IAAI,MAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADT,EAEGG,SAAS,CAACoB,GAAV,CAAchB,IAAI,IACjB,MAAC,QAAD;IAAU,GAAG,EAAEA,IAAI,CAACY,EAApB;IAAwB,IAAI,EAAEZ,IAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD,CAFH,CADF;AAQD,CAnDD;;AAqDAR,IAAI,CAACyB,KAAL,GAAa,MAAb;AAEA,eAAezB,IAAf"},"metadata":{},"sourceType":"module"}