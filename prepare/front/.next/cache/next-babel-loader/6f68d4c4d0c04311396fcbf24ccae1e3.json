{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, Image, List, Popover } from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport { Content, Buttons } from 'antd/lib/layout/layout';\nimport { useCallback, useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpend = _useState2[0],\n      setCommentFormOpend = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpend(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST\n    });\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 31\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      images: post.imgages,\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, \" \\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onRemovePost: onRemovePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 27\n          }\n        }, item.User.nickname),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(PostCard, \"w1TujD6Am4UyX/pZeRa4qrpTEmg=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["PropTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","Avatar","Button","Card","Comment","Image","List","Popover","ButtonGroup","useSelector","PostImages","Content","Buttons","useCallback","useEffect","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpend","setCommentFormOpend","onToggleLike","prev","onToggleComment","onRemovePost","dispatch","type","marginBottom","Images","imgages","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n  HeartTwoTone,\n} from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, Image, List, Popover } from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport { Content, Buttons } from 'antd/lib/layout/layout';\nimport { useCallback, useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nconst PostCard = ({ post }) => {\n  const id = useSelector(state => state.user.me?.id);\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpend, setCommentFormOpend] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n    });\n  });\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              images={post.imgages}\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button> 수정</Button>\n                    <Button type=\"danger\" onRemovePost={onRemovePost}>\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Image />\n        <Content />\n        {/* <Buttons></Buttons> */}\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpend && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={item => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}