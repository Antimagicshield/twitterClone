{"ast":null,"code":"var _jsxFileName = \"/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, Image, List, Popover } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport { Content } from 'antd/lib/layout/layout';\nimport { useCallback, useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({\n  post\n}) => {\n  var _post$User$nickname;\n\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const liked = post.Likers.find(v => v.id === id);\n  const {\n    0: commentFormOpend,\n    1: setCommentFormOpend\n  } = useState(false);\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnlike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  useEffect(() => {\n    console.log(post);\n  }, [post]);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      images: post.imgages,\n      onClick: onUnlike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, \" \\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        loading: removePostLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, (_post$User$nickname = post.User.nickname) === null || _post$User$nickname === void 0 ? void 0 : _post$User$nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 27\n        }\n      }, item.User.nickname),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["PropTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","Avatar","Button","Card","Comment","Image","List","Popover","useDispatch","useSelector","PostImages","Content","useCallback","useEffect","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","FollowButton","PostCard","post","dispatch","removePostLoading","state","id","user","me","liked","Likers","find","v","commentFormOpend","setCommentFormOpend","onLike","type","data","onUnlike","onToggleComment","prev","onRemovePost","console","log","marginBottom","Images","imgages","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n  HeartTwoTone,\n} from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, Image, List, Popover } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport { Content } from 'antd/lib/layout/layout';\nimport { useCallback, useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport {\n  REMOVE_POST_REQUEST,\n  LIKE_POST_REQUEST,\n  UNLIKE_POST_REQUEST,\n} from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n\n  const { removePostLoading } = useSelector(state => state.post);\n  const id = useSelector(state => state.user.me?.id);\n  const liked = post.Likers.find(v => v.id === id);\n\n  const [commentFormOpend, setCommentFormOpend] = useState(false);\n\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  const onUnlike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log(post);\n  }, [post]);\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              images={post.imgages}\n              onClick={onUnlike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button> 수정</Button>\n                    <Button\n                      type=\"danger\"\n                      onClick={onRemovePost}\n                      loading={removePostLoading}\n                    >\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={id && <FollowButton post={post} />}\n      >\n        <Image />\n        <Content />\n        {/* <Buttons></Buttons> */}\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname?.[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpend && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={item => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}