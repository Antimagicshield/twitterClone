{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, Image, List, Popover } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport { Content } from 'antd/lib/layout/layout';\nimport { useCallback, useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var _post$User$nickname;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpend = _useState2[0],\n      setCommentFormOpend = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpend(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  useEffect(function () {\n    console.log(post.Images);\n  }, [post.Images]);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 31\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      images: post.imgages,\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \" \\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        loading: removePostLoading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, (_post$User$nickname = post.User.nickname) === null || _post$User$nickname === void 0 ? void 0 : _post$User$nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }\n        }, item.User.nickname),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(PostCard, \"igVOhcxBAmTkA2dRV1e9p4finxU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["PropTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","Avatar","Button","Card","Comment","Image","List","Popover","useDispatch","useSelector","PostImages","Content","useCallback","useEffect","useState","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","state","removePostLoading","id","user","me","liked","setLiked","commentFormOpend","setCommentFormOpend","onToggleLike","prev","onToggleComment","onRemovePost","type","data","console","log","Images","marginBottom","imgages","User","nickname","content","Comments","length","item","propTypes","shape","string","object","createdAt","arrayOf","isRequired"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n  HeartTwoTone,\n} from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, Image, List, Popover } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport { Content } from 'antd/lib/layout/layout';\nimport { useCallback, useEffect, useState } from 'react';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n\n  const { removePostLoading } = useSelector(state => state.post);\n  const id = useSelector(state => state.user.me?.id);\n\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpend, setCommentFormOpend] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log(post.Images);\n  }, [post.Images]);\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              images={post.imgages}\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button> 수정</Button>\n                    <Button\n                      type=\"danger\"\n                      onClick={onRemovePost}\n                      loading={removePostLoading}\n                    >\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={id && <FollowButton post={post} />}\n      >\n        <Image />\n        <Content />\n        {/* <Buttons></Buttons> */}\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname?.[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpend && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={item => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}