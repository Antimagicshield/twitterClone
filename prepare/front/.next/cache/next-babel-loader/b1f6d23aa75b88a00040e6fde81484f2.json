{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\ninitialState.mainPosts = initialState.mainPosts.concat(Array(20).fill().map(function () {\n  return {\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph(),\n    Images: [{\n      src: faker.image.image()\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n}));\nconsole.log('arrat test', initialState.mainPosts[1]);\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Image: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    }\n  };\n}; //reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = true;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = ction.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","concat","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","console","log","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","Image","dummyComment","reducer","state","action","draft","unshift","ction","error","filter","v","post","find","postId"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\ninitialState.mainPosts = initialState.mainPosts.concat(\n  Array(20)\n    .fill()\n    .map(() => ({\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.paragraph(),\n      Images: [\n        {\n          src: faker.image.image(),\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            id: shortId.generate(),\n            nickname: faker.name.findName(),\n          },\n          content: faker.lorem.sentence(),\n        },\n      ],\n    }))\n);\n\nconsole.log('arrat test', initialState.mainPosts[1]);\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n  Image: [],\n  Comments: [],\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n});\n//reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = true;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = ction.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(v => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find(v => v === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}