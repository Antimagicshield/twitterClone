{"ast":null,"code":"import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), // call과 다름 (call은 비동기 실행)\n  fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"names":["all","call","fork","put","takeEvery","takeLatest","logInAPI","data","axios","post","logIn","action","result","type","err","response","logOutAPI","logOut","addPostAPI","addPost","watchLogIn","watchLogOut","watchAddPost","rootSaga"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/sagas/index.js"],"sourcesContent":["import {\n  all,\n  call,\n  fork,\n  put,\n  takeEvery,\n  takeLatest,\n} from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLogIn), // call과 다름 (call은 비동기 실행)\n    fork(watchLogOut),\n    fork(watchAddPost),\n  ]);\n}\n"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,UANF,QAOO,oBAPP;;AASA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACD;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;EACtB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMX,IAAI,CAACK,QAAD,EAAWK,MAAM,CAACJ,IAAlB,CAAzB;IACA,MAAMJ,GAAG,CAAC;MACRU,IAAI,EAAE,gBADE;MAERN,IAAI,EAAEK,MAAM,CAACL;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOO,GAAP,EAAY;IACZ,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,gBADE;MAERN,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASS,SAAT,GAAqB;EACnB,OAAOR,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUQ,MAAV,GAAmB;EACjB,IAAI;IACF,MAAML,MAAM,GAAG,MAAMX,IAAI,CAACe,SAAD,CAAzB;IACA,MAAMb,GAAG,CAAC;MACRU,IAAI,EAAE,iBADE;MAERN,IAAI,EAAEK,MAAM,CAACL;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOO,GAAP,EAAY;IACZ,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,iBADE;MAERN,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASW,UAAT,CAAoBX,IAApB,EAA0B;EACxB,OAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AAED,UAAUY,OAAV,CAAkBR,MAAlB,EAA0B;EACxB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMX,IAAI,CAACiB,UAAD,EAAaP,MAAM,CAACJ,IAApB,CAAzB;IACA,MAAMJ,GAAG,CAAC;MACRU,IAAI,EAAE,kBADE;MAERN,IAAI,EAAEK,MAAM,CAACL;IAFL,CAAD,CAAT;EAID,CAND,CAME,OAAOO,GAAP,EAAY;IACZ,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,kBADE;MAERN,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUa,UAAV,GAAuB;EACrB,MAAMf,UAAU,CAAC,gBAAD,EAAmBK,KAAnB,CAAhB;AACD;;AAED,UAAUW,WAAV,GAAwB;EACtB,MAAMhB,UAAU,CAAC,iBAAD,EAAoBY,MAApB,CAAhB;AACD;;AAED,UAAUK,YAAV,GAAyB;EACvB,MAAMjB,UAAU,CAAC,kBAAD,EAAqBc,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;EAClC,MAAMvB,GAAG,CAAC,CACRE,IAAI,CAACkB,UAAD,CADI,EACU;EAClBlB,IAAI,CAACmB,WAAD,CAFI,EAGRnB,IAAI,CAACoB,YAAD,CAHI,CAAD,CAAT;AAKD"},"metadata":{},"sourceType":"module"}