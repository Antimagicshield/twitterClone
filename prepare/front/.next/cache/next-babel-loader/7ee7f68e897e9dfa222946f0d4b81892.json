{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCardContent.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport PropType from 'prop-types';\n\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, postData && console.log(postData), postData.toString().split(/(#[^\\s#]+)/g).map(function (v, i) {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: \"/hashtag/\".concat(v.slice(1)),\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }\n      }, v));\n    }\n\n    return v;\n  }));\n};\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropType.string.isRequired\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"names":["Link","PropType","PostCardContent","postData","console","log","toString","split","map","v","i","match","slice","propTypes","string","isRequired"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/components/PostCardContent.js"],"sourcesContent":["import Link from 'next/link';\nimport PropType from 'prop-types';\n\nconst PostCardContent = ({ postData }) => (\n  <div>\n    {postData && console.log(postData)}\n    {postData\n      .toString()\n      .split(/(#[^\\s#]+)/g)\n      .map((v, i) => {\n        if (v.match(/(#[^\\s#]+)/)) {\n          return (\n            <Link href={`/hashtag/${v.slice(1)}`} key={i}>\n              <a>{v}</a>\n            </Link>\n          );\n        }\n        return v;\n      })}\n  </div>\n);\n\nPostCardContent.propTypes = { postData: PropType.string.isRequired };\n\nexport default PostCardContent;\n"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,OACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGA,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADf,EAEGA,QAAQ,CACNG,QADF,GAEEC,KAFF,CAEQ,aAFR,EAGEC,GAHF,CAGM,UAACC,CAAD,EAAIC,CAAJ,EAAU;IACb,IAAID,CAAC,CAACE,KAAF,CAAQ,YAAR,CAAJ,EAA2B;MACzB,OACE,MAAC,IAAD;QAAM,IAAI,qBAAcF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAd,CAAV;QAAsC,GAAG,EAAEF,CAA3C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAID,CAAJ,CADF,CADF;IAKD;;IACD,OAAOA,CAAP;EACD,CAZF,CAFH,CADsB;AAAA,CAAxB;;KAAMP,e;AAmBNA,eAAe,CAACW,SAAhB,GAA4B;EAAEV,QAAQ,EAAEF,QAAQ,CAACa,MAAT,CAAgBC;AAA5B,CAA5B;AAEA,eAAeb,eAAf"},"metadata":{},"sourceType":"module"}