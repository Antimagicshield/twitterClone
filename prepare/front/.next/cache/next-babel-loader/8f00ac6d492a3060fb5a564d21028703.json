{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\nimport shortId from 'shortId';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000); // const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","delay","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","shortId","addPostAPI","data","axios","post","addCommentAPI","postId","addPost","action","id","generate","type","content","err","response","addComment","watchAddPost","watchAddComment","postSaga"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/sagas/post.js"],"sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport {\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\nimport shortId from 'shortId';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;AAQA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACxB,OAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AAED,SAASG,aAAT,CAAuBH,IAAvB,EAA6B;EAC3B,OAAOC,KAAK,CAACC,IAAN,CAAY,aAAYF,IAAI,CAACI,MAAO,UAApC,EAA+CJ,IAA/C,CAAP;AACD;;AAED,UAAUK,OAAV,CAAkBC,MAAlB,EAA0B;EACxB,IAAI;IACF,MAAMhB,KAAK,CAAC,IAAD,CAAX;IACA,MAAMiB,EAAE,GAAGT,OAAO,CAACU,QAAR,EAAX;IACA,MAAMpB,GAAG,CAAC;MACRqB,IAAI,EAAEhB,gBADE;MAERO,IAAI,EAAE;QACJO,EADI;QAEJG,OAAO,EAAEJ,MAAM,CAACN;MAFZ;IAFE,CAAD,CAAT;IAOA,MAAMZ,GAAG,CAAC;MACRqB,IAAI,EAAEZ,cADE;MAERG,IAAI,EAAEO;IAFE,CAAD,CAAT;EAID,CAdD,CAcE,OAAOI,GAAP,EAAY;IACZ,MAAMvB,GAAG,CAAC;MACRqB,IAAI,EAAElB,gBADE;MAERS,IAAI,EAAEW,GAAG,CAACC,QAAJ,CAAaZ;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUa,UAAV,CAAqBP,MAArB,EAA6B;EAC3B,IAAI;IACF,MAAMhB,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;IACA,MAAMF,GAAG,CAAC;MACRqB,IAAI,EAAEd,mBADE;MAERK,IAAI,EAAEM,MAAM,CAACN;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOW,GAAP,EAAY;IACZ,MAAMvB,GAAG,CAAC;MACRqB,IAAI,EAAEb,mBADE;MAERI,IAAI,EAAEW,GAAG,CAACC,QAAJ,CAAaZ;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUc,YAAV,GAAyB;EACvB,MAAMzB,UAAU,CAACG,gBAAD,EAAmBa,OAAnB,CAAhB;AACD;;AAED,UAAUU,eAAV,GAA4B;EAC1B,MAAM1B,UAAU,CAACK,mBAAD,EAAsBmB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;EAClC,MAAM9B,GAAG,CAAC,CAACC,IAAI,CAAC2B,YAAD,CAAL,EAAqB3B,IAAI,CAAC4B,eAAD,CAAzB,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}