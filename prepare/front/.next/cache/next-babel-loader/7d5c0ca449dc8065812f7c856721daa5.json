{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nimport shortId from 'shortid';\n\nfunction loadPostsAPI(data) {\n  return axios.get('/api/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000); // const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","delay","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","shortId","loadPostsAPI","data","axios","get","loadPosts","action","id","generate","type","LOAD_POSTS_SUCCESS","content","err","console","log","LOAD_POSTS_FAILURE","response","addPostAPI","post","addPost","removePostAPI","removePost","addCommentAPI","postId","addComment","watchLoadPost","watchAddPost","watchRemovePost","watchAddComment","postSaga","watchLoadPosts"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/sagas/post.js"],"sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport {\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nimport shortId from 'shortid';\n\nfunction loadPostsAPI(data) {\n  return axios.get('/api/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchLoadPosts),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}