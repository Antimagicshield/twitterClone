{"ast":null,"code":"import { all, fork, put, takeLatest, delay, throttle, call } from 'redux-saga/effects';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nimport axios from 'axios';\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadPosts() {\n  try {\n    const result = yield call(loadPostsAPI);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLikePost), fork(watchUnlikePost), fork(watchRemovePost), fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","delay","throttle","call","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","axios","likePostAPI","data","patch","likePost","action","result","type","err","console","error","response","unlikePostAPI","delete","unlikePost","loadPostsAPI","get","loadPosts","addPostAPI","post","content","addPost","id","log","removePostAPI","removePost","shortId","generate","addCommentAPI","postId","addComment","watchLikePost","watchUnlikePost","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/sagas/post.js"],"sourcesContent":["import {\n  all,\n  fork,\n  put,\n  takeLatest,\n  delay,\n  throttle,\n  call,\n} from 'redux-saga/effects';\nimport {\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_SUCCESS,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  UNLIKE_POST_REQUEST,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nimport axios from 'axios';\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadPosts() {\n  try {\n    const result = yield call(loadPostsAPI);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error('error');\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', { content: data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.log('error');\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchRemovePost),\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}