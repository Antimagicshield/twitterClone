{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null\n};\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const RETWEET_REQUEST_REQUEST = 'RETWEET_REQUEST_REQUEST';\nexport const RETWEET_REQUEST_SUCCESS = 'RETWEET_REQUEST_SUCCESS';\nexport const RETWEET_REQUEST_FAILURE = 'RETWEET_REQUEST_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); //reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(v => v.id !== action.data.PostId);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST_REQUEST","RETWEET_REQUEST_SUCCESS","RETWEET_REQUEST_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","filter","v","i","RETWEET_REQUEST","retweetLoading","retweetDone","retweetError","RETWEET_SUCCESS","RETWEET_FAILURE","error","post","find","id","PostId","Likers","push","UserId","concat","length","unshift","Comments"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n};\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const RETWEET_REQUEST_REQUEST = 'RETWEET_REQUEST_REQUEST';\nexport const RETWEET_REQUEST_SUCCESS = 'RETWEET_REQUEST_SUCCESS';\nexport const RETWEET_REQUEST_FAILURE = 'RETWEET_REQUEST_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n//reducer 이전 상태를 액션을 통해 다음 상태로 만들어 내는 함수(단, 불변성을 지키면서!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = state.mainPosts.filter(\n          v => v.id !== action.data.PostId\n        );\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}