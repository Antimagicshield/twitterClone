{"ast":null,"code":"import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000); // const result = yield call(logInAPI, action.data);\n\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); // const result = yield call(logOutAPI);\n\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); // const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), // call과 다름 (call은 비동기 실행)\n  fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"names":["all","call","fork","put","takeEvery","takeLatest","logInAPI","data","axios","post","logIn","action","delay","type","result","err","response","logOutAPI","logOut","addPostAPI","addPost","watchLogIn","watchLogOut","watchAddPost","rootSaga"],"sources":["/Users/munseungjun/Documents/react-NodeBird/prepare/front/sagas/index.js"],"sourcesContent":["import {\n  all,\n  call,\n  fork,\n  put,\n  takeEvery,\n  takeLatest,\n} from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    // const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLogIn), // call과 다름 (call은 비동기 실행)\n    fork(watchLogOut),\n    fork(watchAddPost),\n  ]);\n}\n"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,UANF,QAOO,oBAPP;;AASA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACD;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;EACtB,IAAI;IACF,MAAMC,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;IACA,MAAMT,GAAG,CAAC;MACRU,IAAI,EAAE,gBADE;MAERN,IAAI,EAAEO,MAAM,CAACP;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOQ,GAAP,EAAY;IACZ,MAAMZ,GAAG,CAAC;MACRU,IAAI,EAAE,gBADE;MAERN,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASU,SAAT,GAAqB;EACnB,OAAOT,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUS,MAAV,GAAmB;EACjB,IAAI;IACF,MAAMN,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;IACA,MAAMT,GAAG,CAAC;MACRU,IAAI,EAAE,iBADE;MAERN,IAAI,EAAEO,MAAM,CAACP;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOQ,GAAP,EAAY;IACZ,MAAMZ,GAAG,CAAC;MACRU,IAAI,EAAE,iBADE;MAERN,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;IAFX,CAAD,CAAT;EAID;AACF;;AAED,SAASY,UAAT,CAAoBZ,IAApB,EAA0B;EACxB,OAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AAED,UAAUa,OAAV,CAAkBT,MAAlB,EAA0B;EACxB,IAAI;IACF,MAAMC,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;IACA,MAAMT,GAAG,CAAC;MACRU,IAAI,EAAE,kBADE;MAERN,IAAI,EAAEO,MAAM,CAACP;IAFL,CAAD,CAAT;EAID,CAPD,CAOE,OAAOQ,GAAP,EAAY;IACZ,MAAMZ,GAAG,CAAC;MACRU,IAAI,EAAE,kBADE;MAERN,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;IAFX,CAAD,CAAT;EAID;AACF;;AAED,UAAUc,UAAV,GAAuB;EACrB,MAAMhB,UAAU,CAAC,gBAAD,EAAmBK,KAAnB,CAAhB;AACD;;AAED,UAAUY,WAAV,GAAwB;EACtB,MAAMjB,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACD;;AAED,UAAUK,YAAV,GAAyB;EACvB,MAAMlB,UAAU,CAAC,kBAAD,EAAqBe,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;EAClC,MAAMxB,GAAG,CAAC,CACRE,IAAI,CAACmB,UAAD,CADI,EACU;EAClBnB,IAAI,CAACoB,WAAD,CAFI,EAGRpB,IAAI,CAACqB,YAAD,CAHI,CAAD,CAAT;AAKD"},"metadata":{},"sourceType":"module"}